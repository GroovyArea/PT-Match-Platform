<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itwill.helljava.mapper.PtServiceMapper">
	<insert id="insertPtService">
		<selectKey resultType="int" keyProperty="ptServiceNo" order="BEFORE">
			select seq_pt_service.nextval from dual
		</selectKey>
		insert into pt_service values(
		#{ptServiceNo},
		#{memberNo},
		#{trainerNo},
		#{ptServiceTitle, jdbcType=VARCHAR},
		#{ptServiceContent},
		#{ptServiceReply, jdbcType=VARCHAR},
		#{ptServiceStars, jdbcType=INTEGER},
		#{ptServiceGood, jdbcType=INTEGER},
		sysdate,
		#{ptServiceStatus},
		#{ptServiceSortation})
	</insert>
	
	<update id="updatePtService">
		update pt_service
		<set>
			<if test="ptServiceTitle != null and ptServiceTitle != ''">
				pt_service_title = #{ptServiceTitle},
			</if>
			<if test="ptServiceContent != null and ptServiceContent != ''">
				pt_service_content = #{ptServiceContent},
			</if>
			<if test="ptServiceReply !=null and ptServiceReply != ''">
				pt_service_reply = #{ptServiceReply},
			</if>
			<if test="ptServiceStars != null and ptServiceStars != ''">
				pt_service_stars = #{ptServiceStars},
			</if>
			<if test="ptServiceStatus &gt;=0  and ptServiceStatus &lt;=3 ">
				pt_service_status = #{ptServiceStatus}
			</if>
		</set>
		where pt_service_no = #{ptServiceNo}
	</update>
	
	<update id="updatePtServiceGood">
		update pt_service set pt_service_good = pt_service_good + 1 where pt_service_no = #{ptServiceNo}
	</update>
	
	<select id="selectPtServiceCount" resultType="int">
			select count(*) from pt_service 
			<trim prefix="where" prefixOverrides="and">
				<if test="pt_service_status &gt;=0 and pt_service_status &lt;=3">
					pt_service_status = #{pt_service_status}
				</if>
				and pt_service_sortation = #{pt_service_sortation} and
			</trim>
			member_no = #{member_no}
	</select>

	<select id="selectPtServiceTrainerCount" resultType="int">
			select count(*) from pt_service
			<trim prefix="where" prefixOverrides="and">
				<if test="pt_service_status &gt;=0 and pt_service_status &lt;=3">
					pt_service_status = #{pt_service_status}
				</if>
				and pt_service_sortation = #{pt_service_sortation} and
			</trim>
			trainer_no = #{trainer_no}
	</select>
	
	<select id="selectPtService" resultType="PtService">
		select * from pt_service where pt_service_no=#{pt_service_no}
	</select>
	
		<!-- 내 리뷰 & 내 pt 문의 페이지 (회원입장) ptService,trainer,member Joinㅡ -->
	<select id="selectPtServiceList" resultType="PtService">
		select * from 
		(select rownum rn,ps.* from
		(select *
		from pt_service p left join trainer t on p.trainer_no = t.trainer_no 
						left join member m on t.member_no = m.member_no
			<trim prefix="where" prefixOverrides="and">
				<if test="pt_service_status &gt;=0 and pt_service_status &lt;=3">
					p.pt_service_status = #{pt_service_status}
				</if>
				and p.pt_service_sortation = #{pt_service_sortation} and p.member_no = #{member_no} 
			</trim>
		order by p.pt_service_no desc) ps) 
		where rn between #{startRow} and #{endRow}
	</select>

	<!-- 포스팅 내 리뷰 리스트 & 문의 뽑기 &  (트레이너 입장) Member, ptService Join -->
	<select id="selectPtServiceTrainerList" resultType="PtService">
		<!-- 트레이너 이름, 회원이름, 회원연락처  -->
		select * from 
		(select rownum rn,ps.* from
		(select *
		from pt_service p left join member m on p.member_no = m.member_no
			<trim prefix="where" prefixOverrides="and">
				<if test="pt_service_status &gt;=0 and pt_service_status &lt;=3">
					p.pt_service_status = #{pt_service_status}
				</if>
				and p.pt_service_sortation = #{pt_service_sortation} and p.trainer_no = #{trainer_no} 
			</trim>
		order by p.pt_service_no desc) ps) 
		where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 좋아요 수! -->
	<select id="selectReviewGoodList" resultType="PtService">
		select * from
		(select rownum rn, p.* from(
		select * from pt_service where pt_service_good is not null order by pt_service_good desc) p)
		where rn between 1 and 3
	</select>
</mapper>